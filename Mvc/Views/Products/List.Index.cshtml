@model UCommerce.Sitefinity.UI.Mvc.ViewModels.ProductListViewModel
@using Telerik.Sitefinity.Frontend.Mvc.Helpers
@using Telerik.Sitefinity.Services
@using UCommerce.Sitefinity.UI.Mvc.ViewModels

@{
    ViewBag.Title = "Products";
}
@Html.StyleSheet(Url.WidgetContent("assets/src/css/uc-vue-styles.css"), "head")
@Html.StyleSheet(Url.WidgetContent("assets/dist/css/uc-quantum.css"), "head")
@if (!SystemManager.IsDesignMode)
{
    @Html.Script(Url.WidgetContent("assets/build/js/vendor.bundle.js"), "bottom", false)
    @Html.Script(Url.WidgetContent("assets/build/js/main.js"), "bottom", false)
}

<div class="sfProductsSortByWrp">
    <div>
        <div class="sfSortByWrp">
            <label>@Html.Resource("SortBy", "UcommerceResources")</label>:
            <select onchange="sortProducts(this)">
                @foreach (var item in Model.Sorting)
                {
                    <option value="@item.Key" selected="@item.IsActive">@item.Title</option>
                }
            </select>
        </div>
    </div>
</div>

<div data-component="products" id="@Html.UniqueId("product-list")" v-cloak>
    <input type="hidden" ref="addToBasket" value="@Html.Resource("AddToBasket", "UcommerceResources")" />
    <input type="hidden" ref="notAddToBasket" value="@Html.Resource("NotAddToBasket", "UcommerceResources")" />


    <div class="sfCatalogTotalCount">
        <div>
            <em>@Model.TotalCount @Html.Resource("Products", "UcommerceResources")</em>
        </div>
    </div>
    @if (Model.ShowPager)
    {
        @Html.Action("Index", "ContentPager", new
        {
           currentPage = Model.CurrentPage,
           totalPagesCount = Model.TotalPagesCount.Value,
           redirectUrlTemplate = Model.PagingUrlTemplate
        })
    }
    @foreach (var route in Model.Routes)
    {
        <input type="hidden" class="@route.Key" value="@route.Value" />
    }
    <ul class="sfproductsList">
        @foreach (var product in Model.Products)
        {
            <li class="sfproductListItem sfProductCtnTmbmedium">
                <div class="sfproductTmbWrp">
                    <a title="@Html.HtmlSanitize((string)product.DisplayName)" class=" sfProductTmbWrpmedium" href="@product.ProductUrl">
                        <img title="Top 100 Digital Agencies" src="@product.ThumbnailImageMediaUrl" alt="@Html.HtmlSanitize((string)product.DisplayName)">
                    </a>
                </div>
                <h2 class="sfproductTitle">
                    <a class="sfproductTitleLnk" href="@product.ProductUrl">@Html.HtmlSanitize((string)product.DisplayName)</a>
                </h2>
                <div class="sfproductPrice bottomPrice">
                    <div>
                        <div class="sfTxtContent"></div>
                        <div>
                            <span class="sfRegPrice">@product.Price</span>
                            @if (!string.IsNullOrWhiteSpace(product.Discount))
                            {
                                <p class="paragraph-top">@Html.Resource("Discount", "UcommerceResources"):</p>
                                <span class="sfDiscPrice">@product.Discount</span>
                            }
                        </div>
                        <add-to-basket :product-sku="'@product.Sku'" :root-id="$el.id">
                        </add-to-basket>
                    </div>
                </div>
                <div class="sfReviewWrp">
                    <a href="@product.ProductUrl">@Html.Resource("WriteReview", "UcommerceResources")</a>
                </div>
            </li>
        }
    </ul>
    <div class="product-list-paging">
        <div class="sfCatalogTotalCount">
            <div>
                <em>@Model.TotalCount @Html.Resource("Products", "UcommerceResources")</em>
            </div>
        </div>
        @if (Model.ShowPager)
        {
            @Html.Action("Index", "ContentPager", new
            {
                currentPage = Model.CurrentPage,
                totalPagesCount = Model.TotalPagesCount.Value,
                redirectUrlTemplate = Model.PagingUrlTemplate
            })
        }
    </div>
</div>
<script type="text/x-template" id="add-to-basket-template">
    <div>
        <span class="sfTxtLbl">@Html.Resource("Quantity", "UcommerceResources"):</span>
        <span class="sfErrorWrp" style="display:none;">
            <span class="sfError">
                @Html.Resource("SpecifyQuantity", "UcommerceResources")
            </span>
        </span>
        <span class="sfErrorWrp" style="display:none;">
            <span class="sfError">
                @Html.Resource("QuantityValidation", "UcommerceResources")
            </span>
        </span>
        <input title="Product Quantity" id="productQuantityInput" v-model="quantity" type="text" class="sfTxt sfQuantity" />
        <input type="button" title="Add to cart button" value="@Html.Resource("AddToCart", "UcommerceResources")" v-on:click="addToBasket()" class="sfAddToCartBtn" />
        <span class="sfAddToCart" v-show="showAddToBasketMessage">{{addToBasketMessage}}</span>
    </div>
</script>
<script type="text/javascript">
    function sortProducts(item){
        var updatetUrl = updateQueryStringParameter(window.location.href, "sortBy", item.value);
        window.location.href = updatetUrl;
    }

    function updateQueryStringParameter(uri, key, value) {
      var re = new RegExp("([?&])" + key + "=.*?(&|$)", "i");
          var separator = uri.indexOf('?') !== -1 ? "&" : "?";
          if (uri.match(re)) {
            return uri.replace(re, '$1' + key + "=" + value + '$2');
          }
          else {
            return uri + separator + key + "=" + value;
          }
    }
</script>